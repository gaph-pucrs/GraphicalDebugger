/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package energyMemory.energyMemGUI;

import energyMemory.energyMemGUI.ControlPanel.TilePlotType;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.util.ArrayList;
import javax.swing.ButtonGroup;
import energyMemory.monitoredData.EnergyInfo;

/**
 *
 * @author ruaro
 */
public class OverviewMemoryTab extends javax.swing.JPanel {
    
        private ControlPanel controlPanel;
        private ArrayList<OverviewTilePanel> memoryTilePanels;
        private ButtonGroup buttonGroup;
        private EnergyInfo energyInfo;
    /**
     * Creates new form EnergyOverview
     */
    public OverviewMemoryTab(Dimension parentDimm, ControlPanel controlPanel, EnergyInfo energyInfo) {
        this.controlPanel = controlPanel;
        this.energyInfo = energyInfo;
        
        initComponents();
        
        buttonGroup = new ButtonGroup();
        buttonGroup.add(l1_d_access_Button);
        buttonGroup.add(l1_d_miss_Button);
        buttonGroup.add(l1_i_access_Button);
        buttonGroup.add(l1_i_miss_Button);
        buttonGroup.add(l2_access_Button);
        buttonGroup.add(l2_miss_Button);
        buttonGroup.add(LOAD_MEM_access_Button);
        buttonGroup.add(l1_d_amo_access_Button);
        
        buttonGroup.setSelected(l1_d_access_Button.getModel(), true);
        
        
        this.setPreferredSize(parentDimm);
        resetTileGrid();
    }
    
    //Recompute the alread read values
    //The goal of this function is to fake the address of the controlPanel, and artifically (not by reading files) redo the calculus
    public void refreshPlots(){
        
        
        int ori_num_windows = controlPanel.getNum_windows();
        
        for (OverviewTilePanel tilePanel : memoryTilePanels) {
            tilePanel.resetValueList();
        }
        
        if (controlPanel.isNormalize_window()){
            controlPanel.setMaxAccessNumberTile(0);
        }
        
        controlPanel.resetWindow();
        
        while(controlPanel.getNum_windows() < ori_num_windows){
            updateTiles();
            controlPanel.advanceWindow();
        }
        
        
        /*
        ControlPanel temp_control = controlPanel;
        
        for (OverviewTilePanel tilePanel : memoryTilePanels) {
            tilePanel.resetValueList();
        }
        
        controlPanel = new ControlPanel(controlPanel.getXDIM(), controlPanel.getYDIM());
        controlPanel.resetWindow();
        
        
        while(controlPanel.getNum_windows() < temp_control.getNum_windows()){
            updateTiles();
            controlPanel.advanceWindow();
        }
        
        temp_control.setMaxAccessNumberTile(controlPanel.getMaxAccessNumberTile());
        
        controlPanel = temp_control;*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelGrid = new javax.swing.JPanel();
        monitoringInteresetJPanel = new javax.swing.JPanel();
        l1_i_access_Button = new javax.swing.JRadioButton();
        l1_i_miss_Button = new javax.swing.JRadioButton();
        l1_d_access_Button = new javax.swing.JRadioButton();
        l1_d_miss_Button = new javax.swing.JRadioButton();
        l2_access_Button = new javax.swing.JRadioButton();
        l2_miss_Button = new javax.swing.JRadioButton();
        LOAD_MEM_access_Button = new javax.swing.JRadioButton();
        l1_d_amo_access_Button = new javax.swing.JRadioButton();

        jPanelGrid.setBackground(java.awt.Color.white);

        monitoringInteresetJPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Monitoring Interest", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 11))); // NOI18N
        monitoringInteresetJPanel.setLayout(null);

        l1_i_access_Button.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        l1_i_access_Button.setText("L1-I access");
        l1_i_access_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l1_i_access_ButtonActionPerformed(evt);
            }
        });
        monitoringInteresetJPanel.add(l1_i_access_Button);
        l1_i_access_Button.setBounds(120, 18, 100, 24);

        l1_i_miss_Button.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        l1_i_miss_Button.setText("L1-I miss");
        l1_i_miss_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l1_i_miss_ButtonActionPerformed(evt);
            }
        });
        monitoringInteresetJPanel.add(l1_i_miss_Button);
        l1_i_miss_Button.setBounds(120, 45, 79, 24);

        l1_d_access_Button.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        l1_d_access_Button.setText("L1-D access");
        l1_d_access_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l1_d_access_ButtonActionPerformed(evt);
            }
        });
        monitoringInteresetJPanel.add(l1_d_access_Button);
        l1_d_access_Button.setBounds(0, 18, 101, 24);

        l1_d_miss_Button.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        l1_d_miss_Button.setText("L1-D miss");
        l1_d_miss_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l1_d_miss_ButtonActionPerformed(evt);
            }
        });
        monitoringInteresetJPanel.add(l1_d_miss_Button);
        l1_d_miss_Button.setBounds(0, 45, 85, 24);

        l2_access_Button.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        l2_access_Button.setText("L2 access");
        l2_access_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l2_access_ButtonActionPerformed(evt);
            }
        });
        monitoringInteresetJPanel.add(l2_access_Button);
        l2_access_Button.setBounds(230, 18, 90, 24);

        l2_miss_Button.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        l2_miss_Button.setText("L2 miss");
        l2_miss_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l2_miss_ButtonActionPerformed(evt);
            }
        });
        monitoringInteresetJPanel.add(l2_miss_Button);
        l2_miss_Button.setBounds(230, 45, 72, 24);

        LOAD_MEM_access_Button.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        LOAD_MEM_access_Button.setText("Load Mem.");
        LOAD_MEM_access_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LOAD_MEM_access_ButtonActionPerformed(evt);
            }
        });
        monitoringInteresetJPanel.add(LOAD_MEM_access_Button);
        LOAD_MEM_access_Button.setBounds(330, 18, 100, 24);

        l1_d_amo_access_Button.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        l1_d_amo_access_Button.setText("L1-D AMO access");
        l1_d_amo_access_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l1_d_amo_access_ButtonActionPerformed(evt);
            }
        });
        monitoringInteresetJPanel.add(l1_d_amo_access_Button);
        l1_d_amo_access_Button.setBounds(330, 45, 140, 24);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelGrid, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
                .addGap(3, 3, 3))
            .addComponent(monitoringInteresetJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(monitoringInteresetJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelGrid, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void l1_d_amo_access_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l1_d_amo_access_ButtonActionPerformed
        refreshPlots();
    }//GEN-LAST:event_l1_d_amo_access_ButtonActionPerformed

    private void l1_d_access_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l1_d_access_ButtonActionPerformed
        refreshPlots();
    }//GEN-LAST:event_l1_d_access_ButtonActionPerformed

    private void l1_i_access_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l1_i_access_ButtonActionPerformed
        refreshPlots();
    }//GEN-LAST:event_l1_i_access_ButtonActionPerformed

    private void l2_access_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l2_access_ButtonActionPerformed
        refreshPlots();
    }//GEN-LAST:event_l2_access_ButtonActionPerformed

    private void LOAD_MEM_access_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LOAD_MEM_access_ButtonActionPerformed
        refreshPlots();
    }//GEN-LAST:event_LOAD_MEM_access_ButtonActionPerformed

    private void l1_d_miss_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l1_d_miss_ButtonActionPerformed
        refreshPlots();
    }//GEN-LAST:event_l1_d_miss_ButtonActionPerformed

    private void l1_i_miss_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l1_i_miss_ButtonActionPerformed
        refreshPlots();
    }//GEN-LAST:event_l1_i_miss_ButtonActionPerformed

    private void l2_miss_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l2_miss_ButtonActionPerformed
        refreshPlots();
    }//GEN-LAST:event_l2_miss_ButtonActionPerformed

    
    public void updateTiles(){
        
        
        float window_value, total_value;
        
        
        boolean window_change = false;
        int start_time  = controlPanel.getMin_window_time();
        int end_time    = controlPanel.getMax_window_time();
        
        for (OverviewTilePanel tilePanel : memoryTilePanels) {
            //System.out.println(tilePanel.getAddr());
            //if (tilePanel.getAddr() == 0){
                //System.out.println("*******************");
                int addr = tilePanel.getAddr();
                
                if (l1_d_access_Button.isSelected()){
                    
                    window_value = energyInfo.getEnergyMemory().getTileWindow_L1_D_access(addr, start_time, end_time);
                    total_value = energyInfo.getEnergyMemory().getTile_L1_D_access(addr);
                    
                } else if (l1_d_miss_Button.isSelected()){
                    
                    window_value = energyInfo.getEnergyMemory().getTileWindow_L1_D_miss(addr, start_time, end_time);
                    total_value = energyInfo.getEnergyMemory().getTile_L1_D_miss(addr);
                    
                } else if (l1_i_access_Button.isSelected()){
                    
                    window_value = energyInfo.getEnergyMemory().getTileWindow_L1_I_access(addr, start_time, end_time);
                    total_value = energyInfo.getEnergyMemory().getTile_L1_I_access(addr);
                    
                } else if (l1_i_miss_Button.isSelected()){
                    
                    window_value = energyInfo.getEnergyMemory().getTileWindow_L1_I_miss(addr, start_time, end_time);
                    total_value = energyInfo.getEnergyMemory().getTile_L1_I_miss(addr);
                    
                } else if (l2_access_Button.isSelected()){
                    
                    window_value = energyInfo.getEnergyMemory().getTileWindow_L2_access(addr, start_time, end_time);
                    total_value = energyInfo.getEnergyMemory().getTile_L2_access(addr);
                    
                } else if (l2_miss_Button.isSelected()){
                    
                    window_value = energyInfo.getEnergyMemory().getTileWindow_L2_miss(addr, start_time, end_time);
                    total_value = energyInfo.getEnergyMemory().getTile_L2_miss(addr);
                    
                } else if (LOAD_MEM_access_Button.isSelected()){
                    
                    window_value = energyInfo.getEnergyMemory().getTileWindow_LOAD_MEM(addr, start_time, end_time);
                    total_value = energyInfo.getEnergyMemory().getTile_LOAD_MEM(addr);
                    
                } else { //AMO button
                    
                    window_value = energyInfo.getEnergyMemory().getTileWindow_AMO_access(addr, start_time, end_time);
                    total_value = energyInfo.getEnergyMemory().getTile_AMO_access(addr);
                }
                
                
                if (window_value > controlPanel.getMaxAccessNumberTile() && controlPanel.isNormalize_window()){
                    controlPanel.setMaxAccessNumberTile(window_value);
                    window_change = true;
                }
                
                tilePanel.addWindowMemoryValue(window_value, total_value);
                
        }
        
        
        //Repaint case there is a change in the max value
        //Maybe this can be removed - removed for while, case the bars dont update accordly is necessary to redo this
        if (window_change){
            for (OverviewTilePanel tilePanel : memoryTilePanels) {
                tilePanel.repaint();
            }
        }
        //System.out.println("Total Energy: "+energyInfo.computeTotalEnergyWindow(controlPanel.getMin_window_time(), controlPanel.getMax_window_time()));
        
    }
    
    
    public void resetTileGrid() {
        
        GridBagLayout gridBagLayout = new GridBagLayout();
        GridBagConstraints cons = new GridBagConstraints();

        int XDIM = controlPanel.getXDIM();
        int YDIM = controlPanel.getYDIM();
        
        jPanelGrid.removeAll();
        jPanelGrid.setBackground(Color.white);
        jPanelGrid.setLayout(gridBagLayout);
        
        
        OverviewTilePanel energyTilePanel;
        memoryTilePanels = new ArrayList<>();
        
        //System.out.println(this.getPreferredSize().getSize().height);
        //System.out.println(this.getPreferredSize().getSize().width/XDIM);
        cons.fill = GridBagConstraints.BOTH;
        cons.gridy = 0;
        //for (int y = 0; y < mpsocConfig.getY_dimension(); y++) {
        for (int y = 0; y < YDIM; y++) {
            cons.gridx = 0;
            //for (int x = 0; x < mpsocConfig.getX_dimension(); x++) {
            for (int x = 0; x < XDIM; x++) {
                cons.gridx++;
                
                energyTilePanel = new OverviewTilePanel(controlPanel, energyInfo, (x << 8 | y), TilePlotType.PLOT_MEMORY);
                
                memoryTilePanels.add(energyTilePanel);
                
                jPanelGrid.add(energyTilePanel, cons);
            }
            cons.gridy++;
        }
        
        
        this.revalidate();
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton LOAD_MEM_access_Button;
    private javax.swing.JPanel jPanelGrid;
    private javax.swing.JRadioButton l1_d_access_Button;
    private javax.swing.JRadioButton l1_d_amo_access_Button;
    private javax.swing.JRadioButton l1_d_miss_Button;
    private javax.swing.JRadioButton l1_i_access_Button;
    private javax.swing.JRadioButton l1_i_miss_Button;
    private javax.swing.JRadioButton l2_access_Button;
    private javax.swing.JRadioButton l2_miss_Button;
    private javax.swing.JPanel monitoringInteresetJPanel;
    // End of variables declaration//GEN-END:variables
}

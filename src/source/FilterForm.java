/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package source;

import java.awt.Image;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import util.MPSoCConfig;

/**
 *
 * @author mruaro
 */
public class FilterForm extends javax.swing.JFrame {

    private ArrayList<Integer> filteredServices;
    private ArrayList<Integer> filteredPE;
    private ArrayList<Integer> addedServices;
    private ArrayList<Integer> addedPE;
    private boolean filterServiceEnabled;
    private boolean filterPEEnabled;
    private MPSoCConfig mPSoCConfig;

    public FilterForm(MPSoCConfig mPSoCConfig, Image im) {
        this.mPSoCConfig = mPSoCConfig;
        this.setIconImage(im);
        initComponents();
        this.setLocation(100, 200);
        filteredServices = new ArrayList<>();
        filteredPE = new ArrayList<>();
        addedServices = new ArrayList<>();
        addedPE = new ArrayList<>();
        filterServiceEnabled = false;
        filterPEEnabled = false;
        onlyCheckBox.setSelected(true);
        exceptCheckBox.setSelected(false);
        initializeComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        applyServicesButton = new javax.swing.JButton();
        cancelServicesButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        removeAllButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        addedServicesList = new javax.swing.JList();
        addServiceButton = new javax.swing.JButton();
        toAddServiceComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        onlyCheckBox = new javax.swing.JCheckBox();
        exceptCheckBox = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        applyPEButton = new javax.swing.JButton();
        cancelPEButton = new javax.swing.JButton();
        removePEButton = new javax.swing.JButton();
        removePEAllButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        addedPEList = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();
        addPEButton = new javax.swing.JButton();
        toAddPEComboBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        applyServicesButton.setText("Apply");
        applyServicesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyServicesButtonActionPerformed(evt);
            }
        });

        cancelServicesButton.setText("Close");
        cancelServicesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelServicesButtonActionPerformed(evt);
            }
        });

        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        removeAllButton.setText("Remove All");
        removeAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeAllButtonActionPerformed(evt);
            }
        });

        addedServicesList.setModel(new DefaultListModel());
        jScrollPane1.setViewportView(addedServicesList);

        addServiceButton.setText("Add");
        addServiceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addServiceButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Services");

        onlyCheckBox.setText("Only");
        onlyCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onlyCheckBoxActionPerformed(evt);
            }
        });

        exceptCheckBox.setText("Execpt");
        exceptCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exceptCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addServiceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(applyServicesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(toAddServiceComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(removeAllButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(cancelServicesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(onlyCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exceptCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(176, 176, 176))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(onlyCheckBox)
                        .addComponent(exceptCheckBox))
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(toAddServiceComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addServiceButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeButton)
                    .addComponent(removeAllButton))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(applyServicesButton)
                    .addComponent(cancelServicesButton))
                .addGap(20, 20, 20))
        );

        jTabbedPane1.addTab("Services", jPanel1);

        applyPEButton.setText("Apply");
        applyPEButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyPEButtonActionPerformed(evt);
            }
        });

        cancelPEButton.setText("Close");
        cancelPEButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelPEButtonActionPerformed(evt);
            }
        });

        removePEButton.setText("Remove");
        removePEButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removePEButtonActionPerformed(evt);
            }
        });

        removePEAllButton.setText("Remove All");
        removePEAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removePEAllButtonActionPerformed(evt);
            }
        });

        addedPEList.setModel(new DefaultListModel());
        jScrollPane2.setViewportView(addedPEList);

        jLabel3.setText("Added PEs");

        addPEButton.setText("Add");
        addPEButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPEButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("PEs");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addPEButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(applyPEButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(toAddPEComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(removePEButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(removePEAllButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cancelPEButton, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(159, 159, 159))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(toAddPEComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addPEButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removePEButton)
                    .addComponent(removePEAllButton))
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(applyPEButton)
                    .addComponent(cancelPEButton))
                .addGap(20, 20, 20))
        );

        jTabbedPane1.addTab("PE", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void applyServicesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyServicesButtonActionPerformed
        int option = JOptionPane.showConfirmDialog(this, "You are sure?", "Attention", JOptionPane.YES_NO_OPTION); //YES - 0, NO - 1

        if (option == 0) { //yes

            filteredServices.clear();
            for (Integer added : addedServices) {
                filteredServices.add(added);
            }

            if (filteredServices.size() > 0) {
                filterServiceEnabled = true;
            } else {
                filterServiceEnabled = false;
            }
        }
    }//GEN-LAST:event_applyServicesButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        if (!addedServicesList.isSelectionEmpty()) {
            String service = addedServicesList.getSelectedValue().toString();
            Integer index = addedServicesList.getSelectedIndex();
            DefaultListModel model = (DefaultListModel) addedServicesList.getModel();
            model.remove(index);
            index = mPSoCConfig.getServiceValue(service);
            addedServices.remove(index);
        }
    }//GEN-LAST:event_removeButtonActionPerformed

    private void removeAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeAllButtonActionPerformed

        DefaultListModel model = (DefaultListModel) addedServicesList.getModel();
        if (!model.isEmpty()) {
            model.removeAllElements();
            addedServices.clear();
        }
    }//GEN-LAST:event_removeAllButtonActionPerformed

    private void addServiceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addServiceButtonActionPerformed
        int selectedService = mPSoCConfig.getServiceValue(toAddServiceComboBox.getSelectedItem().toString());

        if (!addedServices.contains(selectedService)) {
            addedServices.add(selectedService);
            addItemInServiceList(toAddServiceComboBox.getSelectedItem().toString());

        }
    }//GEN-LAST:event_addServiceButtonActionPerformed

    private void addItemInServiceList(String service) {
        DefaultListModel model = (DefaultListModel) addedServicesList.getModel();
        model.addElement(service);
    }
    
    private void addItemInPEList(String PE) {
        PE = mPSoCConfig.XYAdressToXYLabel(Integer.parseInt(PE));
        
        DefaultListModel model = (DefaultListModel) addedPEList.getModel();
        model.addElement(PE);
    }

    private void initializeComponents() {

        int[] serviceRef = mPSoCConfig.getServiceReference();

        for (int i = 0; i < serviceRef.length; i++) {
            toAddServiceComboBox.addItem(mPSoCConfig.getStringServiceName(serviceRef[i]));
        }

        for (int i = 0; i < addedServices.size(); i++) {
            addItemInServiceList(mPSoCConfig.getStringServiceName(addedServices.get(i)));
        }
        
        for (int i = 0; i < mPSoCConfig.getPENumber(); i++) {
            
            String  address;
            
            address = mPSoCConfig.IndexAddressToXYLabel(i);
            
            toAddPEComboBox.addItem(address);
           
        }
    }

    private void applyPEButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyPEButtonActionPerformed
        int option = JOptionPane.showConfirmDialog(this, "You are sure?", "Attention", JOptionPane.YES_NO_OPTION); //YES - 0, NO - 1

        if (option == 0) { //yes

            filteredPE.clear();
            for (Integer added : addedPE) {
                filteredPE.add(added);
            }

            if (filteredPE.size() > 0) {
                filterPEEnabled = true;
            } else {
                filterPEEnabled = false;
            }
        }
    }//GEN-LAST:event_applyPEButtonActionPerformed

    private void cancelPEButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelPEButtonActionPerformed
       this.dispose();
    }//GEN-LAST:event_cancelPEButtonActionPerformed

    private void removePEButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removePEButtonActionPerformed
        if (!addedPEList.isSelectionEmpty()) {
            String PE = addedPEList.getSelectedValue().toString();
            PE = Integer.toString(mPSoCConfig.XYLabelToIndexAddress(PE));
            Integer index = addedPEList.getSelectedIndex();
            DefaultListModel model = (DefaultListModel) addedPEList.getModel();
            model.remove(index);
            index = Integer.parseInt(PE);
            //addedServices.remove(index);
            addedPE.remove(index);
        }
    }//GEN-LAST:event_removePEButtonActionPerformed

    private void removePEAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removePEAllButtonActionPerformed
        DefaultListModel model = (DefaultListModel) addedPEList.getModel();
        if (!model.isEmpty()) {
            model.removeAllElements();
            addedPE.clear();
        }
    }//GEN-LAST:event_removePEAllButtonActionPerformed

    private void addPEButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPEButtonActionPerformed
       int selectedPE = 0;
       String label = toAddPEComboBox.getSelectedItem().toString();
       
        selectedPE = mPSoCConfig.XYLabelToIndexAddress(label);

        if (!addedPE.contains(selectedPE)) {
            addedPE.add(selectedPE);
            addItemInPEList(Integer.toString(selectedPE));
        }
    }//GEN-LAST:event_addPEButtonActionPerformed

    private void cancelServicesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelServicesButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelServicesButtonActionPerformed

    private void onlyCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onlyCheckBoxActionPerformed
        if (onlyCheckBox.isSelected()){
            exceptCheckBox.setSelected(false);
        } else {
            exceptCheckBox.setSelected(true);
        }
    }//GEN-LAST:event_onlyCheckBoxActionPerformed

    private void exceptCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exceptCheckBoxActionPerformed
        if (exceptCheckBox.isSelected()){
            onlyCheckBox.setSelected(false);
        } else {
            onlyCheckBox.setSelected(true);
        }
    }//GEN-LAST:event_exceptCheckBoxActionPerformed

    
    public boolean filter(PacketInformation packet){
        
        boolean containsFlag;
        
        try{
            if (packet.getService() == mPSoCConfig.getServiceValue("SLACK_TIME_REPORT"))
                return false;
        } catch(Exception e){}
        
        if (filterServiceEnabled){
            
            containsFlag = filteredServices.contains(packet.getService());
            
            if (onlyCheckBox.isSelected())
                return containsFlag;
            else
                return !containsFlag;
            
        }
        
        if (filterPEEnabled){
            
            return filteredPE.contains(packet.getRouter_address());
            
        }
        
        return true;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addPEButton;
    private javax.swing.JButton addServiceButton;
    private javax.swing.JList addedPEList;
    private javax.swing.JList addedServicesList;
    private javax.swing.JButton applyPEButton;
    private javax.swing.JButton applyServicesButton;
    private javax.swing.JButton cancelPEButton;
    private javax.swing.JButton cancelServicesButton;
    private javax.swing.JCheckBox exceptCheckBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JCheckBox onlyCheckBox;
    private javax.swing.JButton removeAllButton;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton removePEAllButton;
    private javax.swing.JButton removePEButton;
    private javax.swing.JComboBox toAddPEComboBox;
    private javax.swing.JComboBox toAddServiceComboBox;
    // End of variables declaration//GEN-END:variables
}
